---
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "schedule"'
      when: always

services:
  - docker:20.10-dind

stages:
  - lint
  - test
  - provision

variables:
  DEBIAN_FRONTEND: noninteractive
  TZ: Europe/Zurich
  USER: ubuntu

lint:
  stage: lint
  needs: []
  image: ubuntu:20.04
  before_script:
    - |-
      source ./ci/provision_emulate.sh
      create_user
      sudo -u ubuntu make init

  script:
    - |-
      su ubuntu -c 'source ./ci/init.sh && setup_required_pkgs && make lint'

.test: &test
  variables:
    WORKDIR: /localbox
  stage: test
  needs: ["lint"]
  image: ubuntu:20.04
  timeout: 12h
  before_script:
    - |-
      source ./ci/provision_emulate.sh
      create_user
      su ubuntu -c 'source ./ci/provision_emulate.sh && install_shellspec'

tests:
  <<: *test
  script:
    - >
      su ubuntu -c """
      export PATH=${PATH}:/home/ubuntu/.local/bin &&
      make test_spec spec_file=spec/bin/${TEST_SPEC}_spec.sh use_docker=false
      """
  parallel:
    matrix:
      - TEST_SPEC: asdf
      - TEST_SPEC: debian_pkgs
      - TEST_SPEC: docker_compose
      - TEST_SPEC: go
      - TEST_SPEC: rust
      - TEST_SPEC: rust_pkgs
      - TEST_SPEC: shellcheck
      - TEST_SPEC: shfmt
      - TEST_SPEC: yamllint
  allow_failure: true

.provision_base: &provision_base
  variables:
    WORKDIR: /home/ubuntu/Documents/repos/dotfiles
  stage: provision
  needs: ["tests"]
  image: ubuntu:20.04
  timeout: 12h
  before_script:
    - |
      source ./ci/provision_emulate.sh
      create_user

provision:ubuntu_20_04:
  <<: *provision_base
  script:
    - sudo -u ubuntu make provision fallback_versions=${FALLBACK_VERSIONS}
  parallel:
    matrix:
      - FALLBACK_VERSIONS: "true"
      - FALLBACK_VERSIONS: "false"
